.TH PshellReadline 3 "Sep 2012" "PSHELL" "Readline Like Functionality"
.SH NAME
PshellReadline - API and library to provide readline like user input functionality
.SH DESCRIPTION
This API implements a readline like functionality for user input.  This can
work with any character stream based input/output terminal device, i.e.
keyboard input over a serial tty, or over a TCP/telnet connection.  This module
will provide up-arrow command history recall, command line editing, and TAB
completion of registered keywords.
.SH SYNOPSIS

#include <PshellReadline.h>

/* set the input/output file descriptors, if not called default=stdin/stdout */

void pshell_rl_setFileDescriptors(int inFd_,
                                  int outFd_,
                                  PshellSerialType serialType_,
                                  int idleTimeout_ = PSHELL_RL_IDLE_TIMEOUT_NONE);

/* write a raw string to the output file descriptor */

void pshell_rl_writeOutput(const char* string_);

/* write a formatted string to the output file descriptor */

void pshell_rl_printf(const char* format_, ...);

/* get a line of user input */

bool pshell_rl_getInput(const char *prompt_, char *input_);

/* check if string1 is a substring of string2 from position */

bool pshell_rl_isSubString(const char *string1_,
                           const char *string2_,
                           unsigned minChars_ = 0);

/* add a keyword to our tab completion list */

void pshell_rl_addTabCompletion(const char *keyword_);

/* set our TAB style, FAST or BASH, default=BASH */

void pshell_rl_setTabStyle(PshellTabStyle tabStyle_);

/* set our idle session timeout in seconds, default=NONE */

void pshell_rl_setIdleTimeout(int timeout_);

Link with the library libpshell-readline

Note, there is also a corresponding python implementation of this functionality in
the module 'PshellReadline.py'.  Its API and examples can be found in the python
subdirectory of this install package.
.SH EXAMPLES
See the file pshellReadlineDemo.cc in the pshell distribution package for a complete
example of using the various parts of the API for this module/library.
.SH MT-LEVEL
Safe
.SH SEE ALSO
pshell(1), PshellServer(3), PshellControl(3)
.SH AUTHOR
Ron Iovine  --  github.com/RonIovine/pshell
